<meta name=viewport content="width=device-width,initial-scale=1">
<style>
button {
	display: block;
}
input, select {
	border: 1px solid #ccc;
}
label input{
	margin-left: 0.5em;
	font-size: 1.2em;
}
h1 {
	margin: 0;
}
h4 {
	margin: 0;
}
pre {
	background-color: #eee;
	padding: 3px;
	border: 1px solid #777;
}
fieldset{
	padding: 5px;
	margin-top: 0.5em;
	border: 1px solid #666;
}
legend{
	font-weight: bold;
}
label{
	display: block;
}
textarea {
	font-family: monospace;
	width: 400px;
	min-height: 50px;
	max-height: 80px;
	font-size: 1.2em;
}
button{
	font-size: 1em;
	padding: 10px;
	background-color: #298EE8;
	color: #fff;
	border: 1px solid white;
	border-radius: 5px;
}
#log{
	font-family: monospace;
	max-height: 400px;
	border: 1px solid black;
	padding: 5px;
	overflow: scroll;
}

.intercom-launcher-frame{
	left: 100px;
}
.section{
	border: 1px solid #ddd;
	padding: 10px;
	margin-bottom: 5px;
}
button{
	margin: 0.5em 0;
}

</style>

<div class="section">
	<h1>App to Use</h1>
	<select id="apps"></select>
</div>

<div class="section">
	<h1>Login / Logout</h1>
	<pre>Intercom('boot', {app_id: APP_ID})</pre>
	<button id="boot">Boot as Visitor i.e. Acquire Install</button>
	<fieldset>
	    <legend>User Details</legend>
		<label>Name<input id="userName" class="input inline userDetails" data-attr="name" placeholder="name"></label>
		<label>Email<input id="userEmail" class="input inline userDetails" data-attr="email" placeholder="email"></label>
		<label>user_id<input id="userID" class="input inline userDetails" data-attr="user_id" placeholder="user id"></label>


		<fieldset>
		    <legend>Company Details</legend>

			<label>Company Name <input id="userCompanyName"           placeholder="company name"></label>
			<label>Company ID   <input id="userCompanyID"             placeholder="company id"></label>
			<label>Custom Attribute Name         <input id="userCompanyAttributeName"  placeholder="company attribute name"></label>
			<label>Custom Attribute Value        <input id="userCompanyAttributeValue" placeholder="company attribute value"></label>
		</fieldset>


		<pre>Intercom('boot', {app_id: APP_ID, email: EMAIL, user_id: USER_ID, name: NAME})</pre>
		<button id="bootUser">Boot as User i.e. User Install</button>

		<pre>Intercom('update', {email: EMAIL, user_id: USER_ID, name: NAME})</pre>
		<button id="loginUser">Login User i.e. User Install</button>
	</fieldset>
	<pre>Intercom('shutdown')</pre>
	<button id="logout">Logout/Shutdown</button>
</div>

<div class="section">
	<h1>Attributes</h1>
		<h4>Update Metadata via individual attributes</h4>
		<pre>Intercom('update', {attribute_name: attribute_value})</pre>
		<label>Name<input id="attributeName" placeholder="attribute name"></label>
		<label>Value<input id="attributeValue" placeholder="attribute value"></label>
		<button id="attributeUpdate">Update Attribute</button>

		<h4>Update via raw Javascript</h4>
		<pre>Intercom('update', attributes)</pre>
		<textarea id="attributeJS"></textarea>
		<button id="attributeUpdateJS">Update Attribute via raw Javascript</button>
</div>
<div class="section">
	<h1>Events</h1>
	<label>Name<input id="eventName" placeholder="event name"></label>
	<fieldset>
	    <legend>Event Metadata (leave blank if not needed) </legend>
		<h4>Update Metadata via individual attributes</h4>
		<pre>Intercom('trackEvent', eventName) / 
Intercom('trackEvent', eventName, {eventMetadataName: eventMetadataValue})</pre>
		<label>Metadata name<input id="eventMetadataName" placeholder="metadata name"></label>
		<label>Metadata value<input id="eventMetadataValue" placeholder="metadata value"></label>
		<button id="eventSubmit">Submit Event</button>

		<h4>Update Metadata via raw Javascript</h4>
		<pre>Intercom('trackEvent', eventName, eventMetadata)</pre>
		<textarea id="eventMetadataJS"></textarea>
		<button id="eventSubmitJS">Submit Event via raw Javascript</button>
	</fieldset>
</div>
<div class="section">
	<h1>Miscellaneous Functions</h1>
	<fieldset>
		<pre>Intercom('show') / Intercom('hide')</pre>
		<button href='' onclick="javascript:Intercom('show')" style="display: inline">Intercom('show')</button>
		<button href='' onclick="javascript:Intercom('hide')" style="display: inline">Intercom('hide')</button>
		<pre>Intercom('showNewMessage', customPrefilledMessage);</pre>
		<label>Custom Prefilled Message<input id="customPrefilledMessage" placeholder="Custom Prefilled Message"></label>
		<button href='' onclick="javascript:Intercom('showNewMessage', $('#customPrefilledMessage').val());">Intercom('showNewMessage',customPrefilledMessage);</button>
		<pre>Intercom('getVisitorId')</pre>
		<button href='' onclick="alert('Visitor ID: ' + Intercom('getVisitorId')); showLog('Visitor ID: ' + Intercom('getVisitorId'))">Intercom('getVisitorId')</button>
	</fieldset>
</div>

<div class="section">
	<h1>Log</h1>
	<div id="log">
	</div>
</div>
<script src="jquery.min.js"></script>
<script>



function log(str, data){
	showLog(str,data)
	if(data)
		console.log(str, data);
	else
		console.log(str);
}
function showLog(str, data){
	var d = new Date();
	var output = "";
	output += d.getFullYear() +
			"-" + (d.getMonth()+1) +
			"-" + d.getDate() +
			" " + d.getHours() +
			":" + d.getMinutes() +
			":" + d.getSeconds();

	output += ": " + str;
	if(data) output += "(Data: + " + JSON.stringify(data) + ")";
	var el = $("<div></div>");
	el.text(output);
	$("#log").prepend(el);
}

function getCurrentAppID(){ return getCurrentAppDetails().id || ""; }
function getCurrentAppSecret(){ return getCurrentAppDetails().secret || ""; }

function getAppName(){ return getUIAppName().val(); }
function getAppID(){ return getUIAppID().val(); }
function getAppSecret(){ return getUIAppSecret().val(); }
function getUserName(){ return getUIUserName().val(); }

function getCompanyName() { return getUICompanyName().val() };
function getCompanyId() { return getUICompanyId().val() };
function getCompanyAttr() { return getUICompanyAttr().val() };
function getCompanyValue() { return getUICompanyValue().val() };


function getUserEmail(){ return getUIUserEmail().val(); }
function getUserID(){ return getUIUserID().val(); }
function getAttrName(){ return getUIAttrName().val(); }
function getAttrValue(){ return getUIAttrValue().val(); }
function getAttrJS(){ return getUIAttrJS().val(); }
function getEventName(){ return getUIEventName().val(); }
function getEventMetadataName(){ return getUIEventMetadataName().val(); }
function getEventMetadataValue(){ return getUIEventMetadataValue().val(); }
function getEventMetadataJS(){ return getUIEventMetadataJS().val(); }


function getUICompanyName() {return $("#userCompanyName"); }
function getUICompanyId() {return $("#userCompanyID"); }
function getUICompanyAttr() {return $("#userCompanyAttributeName"); }
function getUICompanyValue() {return $("#userCompanyAttributeValue"); }
function getUIAppName(){ return $("#appName"); }
function getUIAppID(){ return $("#appID"); }
function getUIAppSecret(){ return $("#appSecret"); }
function getUIUserName(){ return $("#userName"); }
function getUIUserEmail(){ return $("#userEmail"); }
function getUIUserID(){ return $("#userID"); }
function getUIAttrName(){ return $("#attributeName"); }
function getUIAttrValue(){ return $("#attributeValue"); }
function getUIAttrJS(){ return $("#attributeJS"); }
function getUIEventName(){ return $("#eventName"); }
function getUIEventMetadataName(){ return $("#eventMetadataName"); }
function getUIEventMetadataValue(){ return $("#eventMetadataValue"); }
function getUIEventMetadataJS(){ return $("#eventMetadataJS"); }

function getUIAppList(){ return $("#apps"); }

function getCurrentAppDetails(){
	var app = (getUIAppList().val() || "").split("||");
	var data = {
		id: app[0],
		secret: app[1]
	};
	log("Current app", data);
	return data;
}
function generateIntercomSettingsObject(dataObject, callback){
	dataObject = dataObject || {}
	dataObject.app_id = getCurrentAppID();
	var dataToHash = (dataObject.user_id || dataObject.email);
	if(dataToHash){
		$.ajax({
			"url": "/user_hash"
			,"method": "POST"
			,"data": {mode: "user_hash",app_id: dataObject.app_id, data: dataToHash}
			,"dataType": "json"
			,"success": function(data){
				dataObject.user_hash = data.user_hash;
				if(callback) callback(dataObject);
			}
		});
		return;
	}
	log("Generated intercomSettings", dataObject);
	if(callback) callback(dataObject)
	else return dataObject;
}
function getLoginDetails(){
	var data = {};
	if(getUserName()) data.name = getUserName();
	if(getUserEmail()) data.email = getUserEmail();
	if(getUserID()) data.user_id = getUserID();

	if(getUserName()) data.name = getUserName();
	if(getUserEmail()) data.email = getUserEmail();
	if(getUserID()) data.user_id = getUserID();

	var coData = {}
	if(getCompanyName()) coData.name = getCompanyName();
	if(getCompanyId()) coData.id = getCompanyId();
	if(getCompanyAttr()) coData[getCompanyAttr()] = getCompanyValue();
	if(getCompanyId()){
		data.company = coData;
	}

	return data;
}
function getAttrData(){
	var data = {};
	if(getAttrName()) data[getAttrName()] = getAttrValue();
	return data;
}
function getEventMetadata(){
	var data = {};
	var name = getEventMetadataName();
	if(name) data[name] = getEventMetadataValue();
	return data;
}
function getEventData(){
	var data = { name: getEventName() };
	var metadata = getEventMetadata();
	if(metadata != null) data.metadata = metadata;
	return data;
}
function getEventDataJS(){
	var data = { name: getEventName() };
	var metadata = getEventMetadata();
	if(metadata != null) data.metadata = metadata;
	return data;
}
function getAppData(){
	var data = {};
	if(getAppID()){
		data.id = getAppID();
		data.name = getAppName() || data.id;
	}
	return data;
}

function dbGetValue(key){
	return localStorage.getItem(key) || "";
}
function dbSetValue(key,data){
	localStorage.setItem(key, data);
}
function loadSavedData(){
	uiLoadSavedApps(uilLoadPreviousValues);
};
function dbGetLastApp(){
	return dbGetValue("last_app");
}
function uilLoadPreviousValues(){
	getUIAppList().val(dbGetLastApp());
	getUIUserName().val(dbGetValue("last_user_name"));
	getUIUserEmail().val(dbGetValue("last_user_email"));
	getUIUserID().val(dbGetValue("last_user_id"));
	getUIAttrName().val(dbGetValue("last_attribute_name"));
	getUIAttrValue().val(dbGetValue("last_attribute_value"));
	getUIAttrJS().val(dbGetValue("last_attribute_js"));
	getUIEventName().val(dbGetValue("last_event_name"));
	getUIEventMetadataName().val(dbGetValue("last_event_metadata_name"));
	getUIEventMetadataValue().val(dbGetValue("last_event_metadata_value"));
	getUIEventMetadataJS().val(dbGetValue("last_event_metadata_js"));

	getUICompanyName().val(dbGetValue("last_company_name"));
	getUICompanyId().val(dbGetValue("last_company_id"));
	getUICompanyAttr().val(dbGetValue("last_company_attr"));
	getUICompanyValue().val(dbGetValue("last_company_value"));

}

function saveLoginData(data){
	dbSetValue("last_user_name", data.name || "");
	dbSetValue("last_user_email", data.email || "");
	dbSetValue("last_user_id", data.user_id || "");
	if(data.company){

		for(var key in data.company){
			if(key != "name" && key != "id"){
				dbSetValue("last_company_attr", key || "");
				dbSetValue("last_company_value",data.company[key] || "");
			}
		}

		dbSetValue("last_company_name", data.company.name || "");
		dbSetValue("last_company_id",   data.company.id || "");
	}
}

function uiLoadSavedApps(callback){
	var apps = getDBSavedApps(function(apps){
	log("Loading saved apps", apps);
	var appsUI = getUIAppList();
	appsUI.empty();
	var appUI = $("<option value=''>-- Select app --</option>");
	appsUI.append(appUI);
	for(var i = 0; i < apps.length; i++){
		appUI = $("<option></option>");
		var app = apps[i];
		appUI.text(app.name);
		appUI.val(app.id);
		appsUI.append(appUI);
	}
	if(callback)callback();
	});
}
function getDBSavedApps(callback){
	$.ajax({
	"url": "/apps"
	,"dataType": "json"
	,"success": function(apps){
		var appList = [];
		for(var i = 0; i < apps.length; i++){
			var app = parseSavedApp(apps[i]);
			if(app) appList.push(app);
		}
		if(callback) callback(appList);
	}
	});
}
function parseSavedApp(app){
	var data = {};
	if(!app.id) return null;
	data.id = app.id;
	data.name = app.name || app.id;
	return data;
}
function initCallbacks(){
	Intercom('onShow', function() {
		log("Intercom('onShow', function(){}) triggered");
	});

	Intercom('onHide', function() {
		log("Intercom('onHide', function(){}) triggered");
	});
	Intercom('onUnreadCountChange', function(unreadCount) {
		log("Intercom('onUnreadCountChange', function(){}) triggered\n" +
		'Current unread count: ' + unreadCount);
	});
}
function bindEventHandlers(){

	getUIAppList().change(function(){
		log(getUIAppList().val());
		dbSetValue("last_app", getUIAppList().val());
		if(confirm("Reload page? Needed for changing to/from MV3")){
			location.reload();
		}
	});

	$("#logout").click(function(){
		log("Logout");
		Intercom("shutdown");
	});
	$("#boot").click(function(){
		log("Initialise Acquire: Intercom('boot', {app_id: APP_ID});");
		Intercom("boot", generateIntercomSettingsObject());
		initCallbacks();
	});
	$("#bootUser").click(function(){
		log("Initialise User: Intercom('boot', user_data);");

		var loginData = getLoginDetails();
		saveLoginData(loginData);
		generateIntercomSettingsObject(loginData, function(data){ Intercom("boot", data) });
		initCallbacks();
	});
	$("#loginUser").click(function(){
		log("Update User: Intercom('update', user_data);");
		var loginData = getLoginDetails();
		saveLoginData(loginData);

		generateIntercomSettingsObject(loginData, function(data){ Intercom("update", data) });
	});

	$("#attributeUpdate").click(function(){
		var attributeData = getAttrData();
		log("Update Attribute: Intercom('update');", attributeData);

		for(var key in attributeData){
			dbSetValue("last_attribute_name", key);
			dbSetValue("last_attribute_value", attributeData[key] || "");
		}

		Intercom("update", attributeData);
	});
	$("#attributeUpdateJS").click(function(){
		var attributeData = getAttrJS();
		dbSetValue("last_attribute_js", attributeData);
		try{
			eval("var attributeDataJson = " + attributeData);
			log("Update Attribute: Intercom('update');", attributeDataJson);
			Intercom("update", attributeDataJson);
		}
		catch(err){
			alert("Error: " + err.message);
			throw err;
		}
	});

	$("#eventSubmit").click(function(){
		var eventData = getEventData();
		log("Submit Event: Intercom('trackEvent')", eventData);

		dbSetValue("last_event_name", eventData.name || "");
		if(eventData.metadata != null){
			for(var key in eventData.metadata){
				dbSetValue("last_event_metadata_name", key);
				dbSetValue("last_event_metadata_value", eventData.metadata[key] || "");
			}
			Intercom("trackEvent", getEventName(), eventData.metadata);
		}
		else{
			dbSetValue("last_event_metadata_name", "");
			dbSetValue("last_event_metadata_value", "");
			Intercom("trackEvent", getEventName());
		}
	});
	$("#eventSubmitJS").click(function(){
		var eventData = getEventDataJS();

		dbSetValue("last_event_name", eventData.name || "");

		var eventMetadataJS = getEventMetadataJS();
		dbSetValue("last_event_metadata_js", eventMetadataJS);
		try{
			eval("var eventMetadataJSJson = " + eventMetadataJS);
			eventData.metadata = eventMetadataJSJson;
			log("Submit Event: Intercom('trackEvent')", eventData);
			Intercom("trackEvent", getEventName(), eventMetadataJSJson);
		}
		catch(err){
			alert("Error: " + err.message);
			throw err;
		}

	});	

}
$(document).ready(function(){
	loadSavedData();
	bindEventHandlers();
});


var APP_ID = ((dbGetLastApp() || "").split("||")[0]) || getCurrentAppID();
log("Current app_id: " + APP_ID);
(function(){var w=window;var ic=w.Intercom;if(typeof ic==="function"){ic('reattach_activator');ic('update',intercomSettings);}else{var d=document;var i=function(){i.c(arguments)};i.q=[];i.c=function(args){i.q.push(args)};w.Intercom=i;function l(){var s=d.createElement('script');s.type='text/javascript';s.async=true;
s.src='https://widget.intercom.io/widget/'+APP_ID;var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);}if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})()



</script>